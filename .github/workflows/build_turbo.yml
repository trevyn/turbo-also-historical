name: build_turbo

on:
  workflow_dispatch:
  push:
    branches:
      - main
      
env:
  CARGO_TERM_COLOR: always

jobs:

  build:
    name: build ${{ matrix.os }} rust ${{ matrix.rust }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-10.15]
        rust: [stable, beta, nightly]

    steps:
      - uses: actions/checkout@v2

      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}

      - run: npm install
        working-directory: 'frontend'

      - run: npm run build
        working-directory: 'frontend'

      - run: npm install
        working-directory: 'electron'

      - run: npm run build-neon
        working-directory: 'electron'

      - run: npm run make
        working-directory: 'electron'

  build-release:
    name: build-release ${{ matrix.os }} rust ${{ matrix.rust }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-10.15]
        rust: [stable]

    steps:
      - uses: actions/checkout@v2

      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}

      - name: Add macOS certs
        run: chmod +x add-macos-cert.sh && ./add-macos-cert.sh
        env:
          CERTIFICATE_OSX_APPLICATION: ${{ secrets.CERTIFICATE_OSX_APPLICATION }}
          CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}

      - run: npm install
        working-directory: 'frontend'

      - run: npm run build
        working-directory: 'frontend'

      - run: npm install
        working-directory: 'electron'

      - run: npm run build-neon-release
        working-directory: 'electron'

      - run: npm run make
        working-directory: 'electron'

      - uses: actions/upload-artifact@v2
        with:
          name: turbo-darwin-x64-0.1.0.zip
          path: electron/out/make/zip/darwin/x64/turbo-darwin-x64-0.1.0.zip

